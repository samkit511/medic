[pytest]
# Pytest configuration for Medical Chatbot project
# This file configures test discovery, markers, and output formatting

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Markers - define custom test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, test component interactions) 
    api: API endpoint tests
    security: Security and HIPAA compliance tests
    slow: Slow running tests (performance, load testing)
    benchmark: Performance benchmarking tests
    smoke: Smoke tests (quick validation)
    regression: Regression tests
    auth: Authentication and authorization tests
    database: Database operation tests
    ai: AI/ML model tests
    hipaa: HIPAA compliance specific tests

# Output formatting
addopts = 
    --verbose
    --strict-markers
    --strict-config  
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --cov=backend
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=70
    --junitxml=test-results.xml

# Minimum Python version
minversion = 3.8

# Test file patterns
python_files = 
    test_*.py
    *_test.py

# Directories to look for tests
testpaths = 
    tests
    backend/tests

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning:huggingface_hub.*
    ignore::UserWarning:transformers.*
    ignore::FutureWarning:torch.*

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Async test configuration  
asyncio_mode = auto

# Cache directory
cache_dir = .pytest_cache

# Don't collect these files
collect_ignore = [
    "setup.py",
    "conftest.py", 
    "backend/main.py",
    "node_modules",
    ".venv",
    "venv"
]

# Timeout for tests (in seconds)
timeout = 300

# Test ordering
# Run fast tests first, then slow ones
# pytest-ordering plugin would be needed for this
# addopts += --order-dependencies
